/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define lower_layer LWR
#define RSE 2
#define raise_layer RSE
#define ADJ 3
#define adjust_layer ADJ
#define GME 4
#define GLR 5

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        Left_Parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 9>;
        };

        Rift_Parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 5>;
        };

        Left_Brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <17 18>;
        };

        Right_Brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <21 22>;
        };
    };

    macros {
        lang: lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "LANG";
        };
    };

    behaviors {
        LT2Lang: LT2Lang {
            compatible = "zmk,behavior-hold-tap";
            label = "LT2LANG";
            bindings = <&lt>, <&lang>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <38>;
        };

        lt2esclang: lt2esclang {
            compatible = "zmk,behavior-tap-dance";
            label = "LT2ESCLANG";
            #binding-cells = <0>;
            bindings = <&lt 2 ESCAPE>, <&lang>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "MAIN";

            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&kp ESC  &kp TAB           &kt Q  &kp W  &kp E         &kp R             &kp T          &kp Y        &kp U            &kp I         &kp O    &kp P          &kp LBKT       &kp BACKSPACE
         &kp LEFT_SHIFT    &kp A  &kp S  &kp D         &kp F             &kp G          &kp H        &kp J            &kp K         &kp L    &kp SEMICOLON  &kp SQT
         &kp LEFT_CONTROL  &kp Z  &kp X  &kp C         &kp V             &kp B          &kp N        &kp M            &kp COMMA     &kp DOT  &kp FSLH       &kp BACKSLASH
                                         &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 1 SPACE    &lt 1 ENTER  &lt 2 BACKSPACE  &lt 3 DELETE
            >;
        };

        lower_layer {
            label = "SYM";

            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &none      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &none   &none           &none           &none         &none            &none  &trans
        &trans  &none      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL       &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none
        &trans  &kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS       &none   &none           &none           &none         &none            &none
                                         &trans        &trans        &trans          &trans  &trans          &trans
            >;
        };

        raise_layer {
            label = "NUM";

            // -----------------------------------------------------------------------------------------
            // |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
            //       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
            //       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
            //                          |     |     | ADJ |   | ADJ |     |     |

            bindings = <
&trans  &kp KP_NUM       &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp C_VOL_UP  &kp HOME  &kp UP_ARROW  &kp PG_UP  &kp SLCK         &kp CAPS         &trans
        &mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &kp C_MUTE    &kp LEFT  &kp UP        &kp RIGHT  &kp INS          &mt RCTRL K_APP
        &trans           &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &kp C_VOL_DN  &kp END   &none         &kp PG_DN  &kp PAUSE_BREAK  &trans
                                                     &trans     &trans     &lt 1 RET       &lt 1 ESC     &trans    &trans
            >;
        };

        adjust_layer {
            label = "ADJ";

            // -----------------------------------------------------------------------------------------
            // | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
            //       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //       |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                          |     |     |     |   |     |     |     |

            bindings = <
&sys_reset  &bootloader   &none         &none              &none         &none         &none           &none         &none         &none         &none              &none         &bootloader   &sys_reset
            &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1       &bt BT_SEL 0  &bt BT_CLR
            &out OUT_TOG  &tog 0        &ext_power EP_TOG  &none         &none         &none           &none         &none         &none         &ext_power EP_TOG  &tog 0        &out OUT_TOG
                                                           &trans        &none         &trans          &trans        &none         &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adj {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
